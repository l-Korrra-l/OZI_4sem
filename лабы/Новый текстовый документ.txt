int bitNum(int a)
{
    for (int i = 0; i <= a; i++)
    {
        if (pow(2, i) >= a)
        {
            if (i == 0)  return i + 1;
            else return i;
        }
    }
}

void LG(int text)
{
	std::cout << "\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-";
	std::cout << "\n|                  Алгоритм Эль-Гамаля                |";
	std::cout << "\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-";
	srand(time(NULL));
	int p =1+3* rand() % 10;
	int n = bitNum(p);
	std::cout << "\nСлучайное число: "<<p <<" длиной "<<n<<" бит";

	int g=1+rand() % 9;
	std::cout << "\nСлучайный примитивный элемент: " << g ;

	int x = 2*rand() % 10;
	std::cout << "\nСлучайное целое число x:{1<x<p-1}: " << x;
	
	int y = (int)pow(g, x) % p;
	if (y == 0) y = 1;
	std::cout << "\nОткрытый ключ (p,g,y): (" << p << ", " << g << ", " << y << ")";
	std::cout << "\nЗакрытый ключ: " << x;

	int k = 1 + rand() % (p + 1);
	std::cout << "\nСессионный ключ: " << k;
	int a = (int)pow(g, k) % p;
	int b = (int)pow(y, k) * text % p;

	std::cout << "Шифротекст: (" << a << ", " << b << ")";
	int text2 = b * (int)pow(a, p - 1 - x) % p;
	std::cout << "Исходный текст: " << text2;



}